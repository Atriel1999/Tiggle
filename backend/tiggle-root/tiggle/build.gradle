import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.6.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.6.21'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.6.21'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.jetbrains.kotlin:kotlin-reflect:1.6.21'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'

	// configurationProperties를 사용하기 위해 추가
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// h2
	runtimeOnly 'com.h2database:h2'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// DB 셋업이 없는 동안 임시 설정
	runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '11'
	}
}

jar {
	enabled = false
}